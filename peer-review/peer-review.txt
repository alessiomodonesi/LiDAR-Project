Peer Review

Esaminati: gruppo GSD++
Esaminatori: gruppo MS (Modonesi A. e Silvestrin T.)

Le attività da eseguire sul progetto da revisionare sono le seguenti:
● provare a compilare e ad eseguire il codice
● effettuare test estensivi, provando la robustezza del software in
casi particolari e a fronte di input imprevisti
● controllare tutto il codice, cercando:
    ○ problemi di design (contorto, inefficiente)
    ○ memory leak
    ○ stile migliorabile

Revisione:
(1) Il codice sorgente compila correttamente e non segnale errori.
(2) Il main presenta il testing di ogni metodo ed il relativo output.
(3) Il design della classe è chiaro e minimale per via dell'utilizzo dei metodi della classe vector.
    Nessun problema di memory leak, ma lo stile è migliorabile nell'operatore di stampa.

Note:
(1) Il metodo new_scan() è gestito correttamentente con i metodi della classe vector,
    manca però la gestione di eventuali valori negativi tra le misure del sensore.
    Presente anche la gestione di eventuali scansioni con più o meno letture del previsto.
(2) Il metodo get_scan() lancia correttamente un'eccezione se il buffer è vuoto ed
    è correttamente gestito utilizzando i metodi della classe vector.
(3) I metodi clear_buffer() e get_distance() sono correttamente implementati e gestiscono
    correttamente le eccezioni.
(4) L'overload dell'operator<< gestisce correttamente la stampa del contenuto del buffer e
    le eventuali eccezioni, anche se non è il massimo per la visualizzazione su stdout.

Conclusioni:
in generale il progetto presenta della basi solide dal punto di vista del desing e della gestione
della memoria. Mancano solamente alcune accortezze in materia di controlli e visualizzazione a schermo.

Alessio Modonesi e Tommaso Silvestrin